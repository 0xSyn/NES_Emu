<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Talk:VRC6</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>Talk:VRC6</h1><div class="article">
<div class="toc" id="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Extended_VRC6_PPU_banking_modes"><span class="tocnumber">1</span> <span class="toctext">Extended VRC6 PPU banking modes</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Raw_data"><span class="tocnumber">2</span> <span class="toctext">Raw data</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Which_emulator_support.3F"><span class="tocnumber">3</span> <span class="toctext">Which emulator support?</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#SRAM_at_.246000-.247FFF_.3F"><span class="tocnumber">4</span> <span class="toctext">SRAM at $6000-$7FFF ?</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Extended_VRC6_PPU_banking_modes">Extended VRC6 PPU banking modes</span></h2>
<p>The VRC6 documentation (currently linked from <a class="external text" href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10611" rel="nofollow">here</a>) seems to indicate that register $B003 has quite a lot more bits than we currently know about:
</p>
<ul><li> D0/D1: CHR/NT Bank mode
<ul><li> mode 0 - normal</li>
<li> mode 1 - regs 0-3 select 2KB CHR banks, regs 4-7 select nametable banks</li>
<li> mode 2 - regs 0-3 select 1KB CHR banks at 0000-0FFF, regs 4-5 select 2KB CHR banks at 1000-1FFF, regs 6-7 select nametable banks (controlled by mirroring)</li>
<li> mode 3 - pattern tables seemingly also get mapped into the nametables?</li></ul></li>
<li> D2/D3: mirroring control</li>
<li> D4: 0 = Use extra 8KB CHR RAM for nametables (in bank modes 1-3); 1 = Use CHR ROM for nametables</li>
<li> D5: something related to CHR ROM?</li>
<li> D7: SRAM enable (1 = enable)</li></ul>
<p>--<a href="User_Quietust.xhtml" title="User:Quietust">Quietust</a> (<s>talk</s>) 09:07, 23 October 2013 (MDT)
</p>
<dl><dd> That's funny- I noticed something related when I was reformatting up the <a href="VRC6_pinout.xhtml" title="VRC6 pinout">VRC6 pinout</a> page, pin 32.—<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 13:54, 23 October 2013 (MDT)</dd></dl>
<h2><span class="mw-headline" id="Raw_data">Raw data</span></h2>
<p>Here's the raw data I received from BootGod that I used to determine the exact banking pattern of the VRC6:
</p>
<pre>b003 0000 0400 0800 0c00 1000 1400 1800 1c00 2000 2400 2800 2c00
00   81   88   90   99   A0   A9   B1   B8   71   71   78   78
01   81   81   88   88   90   90   99   99   60   69   71   78
02   81   88   90   99   A0   A0   A9   A9   71   78   71   78
03   81   88   90   99   A0   A0   A9   A9   71   78   71   78
04   81   88   90   99   A0   A9   B1   B8   71   78   71   78
05   81   81   88   88   90   90   99   99   60   69   71   78
06   81   88   90   99   A0   A0   A9   A9   71   71   78   78
07   81   88   90   99   A0   A0   A9   A9   71   71   78   78
08   81   88   90   99   A0   A9   B1   B8   71   71   78   78
09   81   81   88   88   90   90   99   99   60   69   71   78
0A   81   88   90   99   A0   A0   A9   A9   71   78   71   78
0B   81   88   90   99   A0   A0   A9   A9   71   78   71   78
0C   81   88   90   99   A0   A9   B1   B8   71   78   71   78
0D   81   81   88   88   90   90   99   99   60   69   71   78
0E   81   88   90   99   A0   A0   A9   A9   71   71   78   78
0F   81   88   90   99   A0   A0   A9   A9   71   71   78   78
10   81   88   90   99   A0   A9   B1   B8   B1   B1   B8   B8
11   81   81   88   88   90   90   99   99   A0   A9   B1   B8
12   81   88   90   99   A0   A0   A9   A9   B1   B8   B1   B8
13   81   88   90   99   A0   A0   A9   A9   B1   B8   B1   B8
14   81   88   90   99   A0   A9   B1   B8   B1   B8   B1   B8
15   81   81   88   88   90   90   99   99   A0   A9   B1   B8
16   81   88   90   99   A0   A0   A9   A9   B1   B1   B8   B8
17   81   88   90   99   A0   A0   A9   A9   B1   B1   B8   B8
18   81   88   90   99   A0   A9   B1   B8   B1   B1   B8   B8
19   81   81   88   88   90   90   99   99   A0   A9   B1   B8
1A   81   88   90   99   A0   A0   A9   A9   B1   B8   B1   B8
1B   81   88   90   99   A0   A0   A9   A9   B1   B8   B1   B8
1C   81   88   90   99   A0   A9   B1   B8   B1   B8   B1   B8
1D   81   81   88   88   90   90   99   99   A0   A9   B1   B8
1E   81   88   90   99   A0   A0   A9   A9   B1   B1   B8   B8
1F   81   88   90   99   A0   A0   A9   A9   B1   B1   B8   B8
20   81   88   90   99   A0   A9   B1   B8   70   71   78   79
21   80   81   88   89   90   91   98   99   60   69   71   78
22   81   88   90   99   A0   A1   A8   A9   71   78   71   78
23   81   88   90   99   A0   A1   A8   A9   70   78   71   79
24   81   88   90   99   A0   A9   B1   B8   70   78   71   79
25   80   81   88   89   90   91   98   99   60   69   71   78
26   81   88   90   99   A0   A1   A8   A9   71   71   78   78
27   81   88   90   99   A0   A1   A8   A9   70   71   78   79
28   81   88   90   99   A0   A9   B1   B8   70   70   78   78
29   80   81   88   89   90   91   98   99   60   69   71   78
2A   81   88   90   99   A0   A1   A8   A9   71   78   71   78
2B   81   88   90   99   A0   A1   A8   A9   71   79   71   79
2C   81   88   90   99   A0   A9   B1   B8   71   79   71   79
2D   80   81   88   89   90   91   98   99   60   69   71   78
2E   81   88   90   99   A0   A1   A8   A9   71   71   78   78
2F   81   88   90   99   A0   A1   A8   A9   70   70   78   78
30   81   88   90   99   A0   A9   B1   B8   B0   B1   B8   B9
31   80   81   88   89   90   91   98   99   A0   A9   B1   B8
32   81   88   90   99   A0   A1   A8   A9   B1   B8   B1   B8
33   81   88   90   99   A0   A1   A8   A9   B0   B8   B1   B9
34   81   88   90   99   A0   A9   B1   B8   B0   B8   B1   B9
35   80   81   88   89   90   91   98   99   A0   A9   B1   B8
36   81   88   90   99   A0   A1   A8   A9   B1   B1   B8   B8
37   81   88   90   99   A0   A1   A8   A9   B0   B1   B8   B9
38   81   88   90   99   A0   A9   B1   B8   B0   B0   B8   B8
39   80   81   88   89   90   91   98   99   A0   A9   B1   B8
3A   81   88   90   99   A0   A1   A8   A9   B1   B8   B1   B8
3B   81   88   90   99   A0   A1   A8   A9   B1   B9   B1   B9
3C   81   88   90   99   A0   A9   B1   B8   B1   B9   B1   B9
3D   80   81   88   89   90   91   98   99   A0   A9   B1   B8
3E   81   88   90   99   A0   A1   A8   A9   B1   B1   B8   B8
3F   81   88   90   99   A0   A1   A8   A9   B0   B0   B8   B8
</pre>
<p>The registers from D000 through E003 contained the pattern 01/08/10/19/20/29/31/38.
</p><p>The $40s bit in this table is the CHRROM /OE. The $80s bit in this table is the CIRAM /OE.
</p><p>(Thus, values from $80-$BF are from ROM and values from $40-$7F are from RAM. Other values are not present (fortunately) —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 17:57, 23 January 2014 (MST)
</p>
<dl><dd>If this table is correct, &quot;For the pattern tables, when the $20s bit of $B003 is set, 2 KiB banks pass PPU A10 through (limiting the register to seven bits wide by ignoring the LSB)&quot; is wrong; it doesn't ignore the LSB of the register. (I have written a QBASIC program to follow the rules mentioned in the article, and it matches this table only if you ignore that rule.) --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 03:07, 10 February 2014 (MST)</dd></dl>
<dl><dd><dl><dd> Please point out which line(s) you feel contradict(s) the assertion of the article—<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 11:13, 10 February 2014 (MST)</dd></dl></dd></dl>
<p>The following QBASIC program gives output matching the table above:
</p>
<pre>
DEFINT A-Z
DATA &amp;H01,&amp;H08,&amp;H10,&amp;H19,&amp;H20,&amp;H29,&amp;H31,&amp;H38
DIM R(0 TO 7), O(0 TO 11)
DEF FNHEX$ (X) = RIGHT$(&quot;0&quot; + HEX$(X), 2) + &quot;   &quot;

FOR I = 0 TO 7
 READ R(I)
NEXT I

OPEN &quot;VRC6BANK.OUT&quot; FOR OUTPUT AS #1
PRINT #1, &quot;b003 0000 0400 0800 0c00 1000 1400 1800 1c00 2000 2400 2800 2c00   &quot;
FOR V = 0 TO &amp;H3F
 SELECT CASE V AND 7
  CASE 0, 4
   FOR I = 0 TO 7
    O(I) = R(I)
   NEXT I
   IF V AND 4 THEN
    O(8) = R(6)
    O(9) = R(7)
    O(10) = R(6)
    O(11) = R(7)
   ELSE
    O(8) = R(6)
    O(9) = R(6)
    O(10) = R(7)
    O(11) = R(7)
   END IF
  CASE 1, 5
   O(0) = R(0)
   O(1) = R(0)
   O(2) = R(1)
   O(3) = R(1)
   O(4) = R(2)
   O(5) = R(2)
   O(6) = R(3)
   O(7) = R(3)
   O(8) = R(4)
   O(9) = R(5)
   O(10) = R(6)
   O(11) = R(7)
  CASE 2, 3
   O(0) = R(0)
   O(1) = R(1)
   O(2) = R(2)
   O(3) = R(3)
   O(4) = R(4)
   O(5) = R(4)
   O(6) = R(5)
   O(7) = R(5)
   O(8) = R(6)
   O(9) = R(7)
   O(10) = R(6)
   O(11) = R(7)
  CASE 6, 7
   O(0) = R(0)
   O(1) = R(1)
   O(2) = R(2)
   O(3) = R(3)
   O(4) = R(4)
   O(5) = R(4)
   O(6) = R(5)
   O(7) = R(5)
   O(8) = R(6)
   O(9) = R(6)
   O(10) = R(7)
   O(11) = R(7)
 END SELECT
 FOR I = 0 TO 7
  O(I) = O(I) OR &amp;H80
  ' *** The following line is the one I mean ***
  IF V AND &amp;H20 AND ((V AND 3) = 1 OR (I &gt; 3 AND (V AND 2) = 2)) THEN O(I) = (O(I) AND &amp;HFE) OR (I AND 1)
 NEXT I
 FOR I = 8 TO 11
  IF V AND &amp;H10 THEN O(I) = O(I) OR &amp;H80 ELSE O(I) = O(I) OR &amp;H40
 NEXT I
 IF V AND &amp;H20 THEN
  FOR I = 8 TO 11
   SELECT CASE V AND 15
    CASE 0, 7
     O(I) = O(I) AND &amp;HFE
     IF I AND 1 THEN O(I) = O(I) OR 1
    CASE 4, 3
     O(I) = O(I) AND &amp;HFE
     IF I AND 2 THEN O(I) = O(I) OR 1
    CASE 8, 15
     O(I) = O(I) AND &amp;HFE
    CASE 12, 11
     O(I) = O(I) OR 1
   END SELECT
  NEXT I
 END IF
 PRINT #1, FNHEX$(V);
 FOR I = 0 TO 11
  PRINT #1, FNHEX$(O(I));
 NEXT I
 PRINT #1,
NEXT V
CLOSE
</pre>
<p>But maybe I have made another mistake in this program, which I haven't noticed. It seems to be the same as meaning, it only passes PPU A10 through if the register is used for multiple 1K banks. Perhaps this is what is actually meant by the article text, although it is a bit unclear (maybe it should say, &quot;2 KiB banks (i.e. if one register is used twice) pass PPU A10 through&quot;, but I wait for your advice on this). --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 12:35, 10 February 2014 (MST)
</p>
<h2><span class="mw-headline" id="Which_emulator_support.3F">Which emulator support?</span></h2>
<p>Can you please tell me which emulator support all of the features of the $B003 register of VRC6? --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 17:50, 9 February 2014 (MST)
</p>
<dl><dd> None (as of the time I signed this). Having a test ROM is probably a prerequisite. —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 17:58, 9 February 2014 (MST)
<dl><dd>Someone who has a VRC6 cartridge could try to do it, perhaps. (I may be able to write a test ROM myself, but it won't be useful (at least at first) since I have no way of testing it, although perhaps the results could be compared with the table above as a kind of partial testing.) Furthermore, what are PPU addresses $3xxx mapped to on VRC6? --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 02:10, 10 February 2014 (MST)
<dl><dd> There's no justifiable reason to care what PPU addresses $3xxx are mapped to, and so we did not measure. —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 11:13, 10 February 2014 (MST)
<dl><dd>I am one that does care. It would be necessary, if someone tries to write a program to access $3000 in PPU, and then you have to know how to emulate such a thing (maybe it is the same as $2xxx, which is what it is when no extra logic is controlling it, but I don't know). --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 12:35, 10 February 2014 (MST)</dd></dl></dd></dl></dd></dl></dd>
<dd> I just the $b003 features to bizhawk, but given how weird they are, and the fact that there are no ROMs that actually used them, I couldn't say that they work for sure without a test ROM.  <a href="User_Natt.xhtml" title="User:Natt">Natt</a> (<s>talk</s>) 11:53, 15 February 2014 (MST)
<dl><dd>The implementation at <a class="external autonumber" href="http://code.google.com/p/bizhawk/source/browse/trunk/quicknes/nes_emu/Mapper_Vrc6.cpp" rel="nofollow">[1]</a> appears to be incomplete. --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 13:19, 15 February 2014 (MST)
<dl><dd>That's for the quicknes core, which we're going to offer as a speedier (but less accurate) alternate.  The Bizhawk Original core is the one I was referring to: <a class="external autonumber" href="http://code.google.com/p/bizhawk/source/browse/trunk/BizHawk.Emulation.Cores/Consoles/Nintendo/NES/Boards/VRC6.cs" rel="nofollow">[2]</a> <a href="User_Natt.xhtml" title="User:Natt">Natt</a> (<s>talk</s>) 15:20, 15 February 2014 (MST)
<dl><dd>Ah, OK, thank you, I didn't know that. It looks OK to me (but I don't know C# programming very well). --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 22:59, 15 February 2014 (MST)</dd></dl></dd></dl></dd></dl></dd>
<dd> Here's a test rom.  Bizhawk (latest SVN) passes it, FCEUX fails predictably.  It shouldn't be considered accurate until it's been run on actual VRC6 hardware.  Also, it's the first thing I've ever written for NES, so who knows what's broken on it. <a class="external autonumber" href="https://www.mediafire.com/?6hvuj53omv8y3fn" rel="nofollow">[3]</a> <a href="User_Natt.xhtml" title="User:Natt">Natt</a> (<s>talk</s>) 13:57, 16 February 2014 (MST)</dd></dl>
<h2><span class="mw-headline" id="SRAM_at_.246000-.247FFF_.3F">SRAM at $6000-$7FFF ?</span></h2>
<p>The document makes a reference to a PRG RAM enable flag at bit 7 of register $B003. Perhaps an entry for it should be added in the Banks section. At least one game (Madara) seems to rely on reading/writing to this region to maintain save points, so it would be reasonable to conclude that this region is not volatile PRG RAM but SRAM. It is also unclear what happens with SRAM when PRG RAM flag is not set - are writes to SRAM ignored and reads return open bus?
</p>
<dl><dd> Plain iNES1 headers cannot specify whether a game has PRG RAM that is <i>not</i> battery backed. And unfortunately NesCartDB is currently down so I can't just say &quot;X% of games have no PRG RAM, Y% have PRG RAM and no battery, Z% have at least one PRG RAM with a battery&quot;... </dd>
<dd> PRG RAM that is not battery backed is just treated like the in-NES RAM: stays across warm boots, lost on a power cycle. </dd>
<dd> In any case, <i>for the VRC6</i>, the two m26 games have battery-backed PRG RAM, and Akumajou Dracula has none. —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 23:42, 30 July 2016 (MDT)</dd></dl>

<!-- 
NewPP limit report
CPU time usage: 0.138 seconds
Real time usage: 0.142 seconds
Preprocessor visited node count: 23/1000000
Preprocessor generated node count: 40/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:1230-1!*!0!!en!*!* and timestamp 20160731121409 and revision id 12771
 -->
</div></body></html>