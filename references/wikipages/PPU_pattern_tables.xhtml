<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>PPU pattern tables</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>PPU pattern tables</h1><div class="article">
<p>The <b>pattern table</b> is an area of memory connected to the PPU that defines the shapes of tiles that make up backgrounds and sprites.
Each tile in the pattern table is 16 bytes, made of two planes.
The first plane controls bit 0 of the color; the second plane controls bit 1. Any pixel whose color is 0 is background/transparent (represented by '.' in the following diagram):
</p>
<pre>Bit Planes            Pixel Pattern
$0xx0=$41  01000001
$0xx1=$C2  11000010
$0xx2=$44  01000100
$0xx3=$48  01001000
$0xx4=$10  00010000
$0xx5=$20  00100000         .1.....3
$0xx6=$40  01000000         11....3.
$0xx7=$80  10000000  =====  .1...3..
                            .1..3...
$0xx8=$01  00000001  =====  ...3.22.
$0xx9=$02  00000010         ..3....2
$0xxA=$04  00000100         .3....2.
$0xxB=$08  00001000         3....222
$0xxC=$16  00010110
$0xxD=$21  00100001
$0xxE=$42  01000010
$0xxF=$87  10000111
</pre>
<p>The pattern table is divided into two 256-tile sections: $0000-$0FFF, nicknamed &quot;left&quot;, and $1000-$1FFF, nicknamed &quot;right&quot;.
The nicknames come from how emulators with a debugger display the pattern table.
Traditionally, they are displayed as two side-by-side 128x128 pixel sections, each representing 16x16 tiles from the pattern table, with $0000-$0FFF on the left and $1000-$1FFF on the right.
</p><p>An important aspect of a <a href="Mapper.xhtml" title="Mapper">mapper</a>'s capability is how finely it allows bank switching parts of the pattern table.
</p>
<h2><span class="mw-headline" id="Addressing">Addressing</span></h2>
<p>PPU addresses within the pattern tables can be decoded as follows:
</p>
<pre>DCBA98 76543210
---------------
0HRRRR CCCCPTTT
|||||| |||||+++- T: Fine Y offset, the row number within a tile
|||||| ||||+---- P: Bit plane (0: &quot;lower&quot;; 1: &quot;upper&quot;)
|||||| ++++----- C: Tile column
||++++---------- R: Tile row
|+-------------- H: Half of sprite table (0: &quot;left&quot;; 1: &quot;right&quot;)
+--------------- 0: Pattern table is at $0000-$1FFF
</pre>
<p>The value written to <a class="mw-redirect" href="PPU_registers.xhtml" title="PPUCTRL">PPUCTRL</a> ($2000) controls whether the background and sprites use the left half ($0000-$0FFF) or the right half ($1000-$1FFF) of the pattern table.
PPUCTRL bit 4 applies to backgrounds, bit 3 applies to 8x8 sprites, and bit 0 of each OAM entry's tile number applies to 8x16 sprites.
</p><p>For example, if rows of a tile are numbered 0 through 7, row 1 of tile $69 in the left pattern table is stored with plane 0 in $0691 and plane 1 in $0699.
</p>
<!-- 
NewPP limit report
CPU time usage: 0.015 seconds
Real time usage: 0.016 seconds
Preprocessor visited node count: 3/1000000
Preprocessor generated node count: 8/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:20-1!*!0!*!*!*!* and timestamp 20160208225730 and revision id 11738
 -->
</div></body></html>