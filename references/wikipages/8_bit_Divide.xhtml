<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>8-bit Divide</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>8-bit Divide</h1><div class="article">
<p>The following code divide two 8-bit integers (range 0...255) and outputs a 16-bit result in fixed point 8.8 format. It is only using real calculations, no lookup table, thus the size of the code is very small.
</p>
<pre>
;8-bit divide
;by Bregalad
;Enter with A = Dividend, Y=Divisor
;Output with YX = (A/Y) &lt;&lt; 8, A = remainder
Division
	sta Dvd		;Stores dividend
	sty Dvs		;Stores divisor
	ldy #$00
	sty ResHi	;Clear result, setting up a ring counter
        iny             ;by initializing the result to $0001.
        sty Res         ;When the 1 gets shifted out, we're done

	ldy #$10	;The loop is for 16-bit result
-	asl Dvd
	rol A		;Shift divisor in 1 bit
        bcs +           ;If carry is set, the dividend is already greater
	cmp Dvs		;Check if fractional dividend is greater than divisor
	bcc ++
+	sbc Dvs 	;Subtract (C is always set)
++	rol Res		;Shift result (1 if subtraction was done, 0 otherwise)
	rol ResHi
	bcc -
	ldx Res
	ldy ResHi
	rts
</pre>

<!-- 
NewPP limit report
CPU time usage: 0.006 seconds
Real time usage: 0.007 seconds
Preprocessor visited node count: 4/1000000
Preprocessor generated node count: 24/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:226-1!*!*!*!*!*!* and timestamp 20160208224713 and revision id 9146
 -->
<p class="categories">Categories: <a href="Category_Arithmetic.xhtml">Arithmetic</a></p></div></body></html>