<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Talk:CPU pin out and signal description</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>Talk:CPU pin out and signal description</h1><div class="article">
<h2><span class="mw-headline" id="Pin_30">Pin 30</span></h2>
<p>The signal from pin 30 goes through the exact same &quot;processing&quot; as the chip's /RESET signal (which includes a Schmitt trigger), at which point it goes to the output logic for the M2 pin (don't know exactly what it does) and then through an inverter which goes to the enables for $4018-$401A and to some other spots (seemingly related to the data buffer used for Sprite DMA). Bit 7 of the writable register at $401A seems to propagate to numerous locations within the sound channels and thus might be responsible for the observation of all writable registers disappearing. --<a href="User_Quietust.xhtml" title="User:Quietust">Quietust</a> 16:49, 29 April 2011 (UTC)
</p>
<dl><dd>When pin 30's input is &quot;processed&quot; it gets inverted, just like with the /RESET pin (since transistors themselves are active-high) - that signal then gets inverted again (so it's now equal to pin 30's input, normalized) and NORed together with the inverted +RESET signal (so it's also the actual state of the input signal), and that result goes to the M2 pin's output logic; thus, if pin 30 is pulled high, then M2 will <b>not</b> be tri-stated during RESET. --<a href="User_Quietust.xhtml" title="User:Quietust">Quietust</a> 20:33, 7 May 2011 (UTC)
<dl><dd>The area where pin 30 goes which I thought was part of the Sprite DMA buffer is actually the logic that controls the R/W pin and the direction of the data pins (it puts the data pins in output mode to handle reading from internal registers), and pulling pin 30 high forces all of $4000-$401F to become internal registers (instead of just $4015). This means that pulling pin 30 high will effectively disable the joypad read ports (but <b>not</b> the write port) - the read enables will still go low, but the CPU won't get any of the data. I'm guessing the designers figured it'd be simpler to do it that way than to combine the 3 read enable signals for $4018-$401A. --<a href="User_Quietust.xhtml" title="User:Quietust">Quietust</a> 15:21, 9 May 2011 (UTC)
<dl><dd>Given Lidnariq's edits to the main article, has this actually been tested and verified against actual hardware? --<a href="User_Quietust.xhtml" title="User:Quietust">Quietust</a> 19:58, 14 September 2011 (UTC)
<dl><dd>I've just performed a test with my CopyNES (removed the CPU, carefully bent pin 30 up, then plugged it in and clipped a wire between it and VCC) and I can confirm that registers $4018-$401A <b>do</b> behave as described <a href="File_Apu_address_jpg.xhtml" title="File:Apu address.jpg">here</a> - reading $4018-$401A returns the output values of each channel, writing $401A bits 0-4 sets the triangle channel position, and setting $401A bit 7 freezes all of the channels. I can also confirm that the joypad ports no longer work, though they still seem to return open bus - presumably, it's actually coming from inside the chip. Additional confirmation would be highly desirable. --<a href="User_Quietust.xhtml" title="User:Quietust">Quietust</a> 18:28, 16 September 2011 (UTC)</dd></dl></dd></dl></dd></dl></dd>
<dd>Will it work OK if pin 30 and pin 7 are wired together? Is someone able to try this to see what happens? --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 16:24, 1 January 2014 (MST)
<dl><dd>If by &quot;work OK&quot; you mean &quot;permit access to $4018-$401A without breaking $4016-$4017 by making debug mode only activate when accessing $4008-$400F/$4018-$401F/etc.&quot;, then the answer is probably &quot;yes&quot;, but I don't have the means to test that right now. --<a href="User_Quietust.xhtml" title="User:Quietust">Quietust</a> (<s>talk</s>) 09:50, 2 January 2014 (MST)</dd></dl></dd></dl>
<h2><span class="mw-headline" id="M2">M2</span></h2>
<p>M2 goes high 1.5 clock cycles (i.e. three clock <i>edges</i> from the 21.477272MHz master clock) <b>before</b> Φ2, but it goes low at the same time as Φ2.
</p><p>Would it be okay to still mention the 6502 input clock (Φ0) in conjunction with M2? It helped me a lot when I realized they're &quot;basically&quot; the same (i.e. when reading <a class="external autonumber" href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9999" rel="nofollow">[1]</a>), and it's pretty easy to miss still scanning through the description. -<a href="User_Ulfalizer.xhtml" title="User:Ulfalizer">Ulfalizer</a> (<s>talk</s>) 19:05, 9 April 2013 (MDT)
</p>
<dl><dd> I feel like that point belongs with CLK instead of M2; does my last edit satisfy?—<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 20:18, 9 April 2013 (MDT)
<dl><dd> Stating that M2 is (roughly) the CPU clock cuts down the chain of inference a bit, and it's handy knowledge even for code monkeys like me when trying to figure out timing diagrams and the like. I'll see if I can come up with some reasonable middle ground. :) -<a href="User_Ulfalizer.xhtml" title="User:Ulfalizer">Ulfalizer</a> (<s>talk</s>) 20:24, 9 April 2013 (MDT)
<dl><dd> I guess the &quot;(φ0 is in turn inverted to form φ1, which is then inverted to form φ2.)&quot; part could be removed if you feel it's getting too verbose/redundant. -<a href="User_Ulfalizer.xhtml" title="User:Ulfalizer">Ulfalizer</a> (<s>talk</s>) 20:51, 9 April 2013 (MDT)
<dl><dd> LGTM. —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 20:58, 9 April 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl>

<!-- 
NewPP limit report
CPU time usage: 0.045 seconds
Real time usage: 0.048 seconds
Preprocessor visited node count: 6/1000000
Preprocessor generated node count: 12/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:553-1!*!0!!*!*!* and timestamp 20160208223944 and revision id 9134
 -->
</div></body></html>