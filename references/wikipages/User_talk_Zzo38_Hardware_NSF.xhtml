<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>User talk:Zzo38/Hardware NSF</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>User talk:Zzo38/Hardware NSF</h1><div class="article">
<p>You can push some space at the top of the stack on startup if you need to reserve some RAM for your own variables. $8000 is probably not a good location to override; lots of NSFs use it for code. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> 23:15, 24 August 2012 (MDT)
</p>
<dl><dd>I agree with you, however, that doesn't count because of: The value of $8000 storing the current song number is only when the main routine ROM is turned on. When the main routine ROM is disabled, it becomes other ROM (if FDS is not used) or RAM (if FDS is used). --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> 00:20, 25 August 2012 (MDT)</dd></dl>
<dl><dd><dl><dd>I still don't see any reason it should be at $8000. If you put it elsewhere (e.g. on the stack, or some other internal register mapped to $4xxx somewhere) you don't have to build a complicated switching device for this single address. What's the purpose of making this one particular address special, when everything else in $8000-FFFF otherwise acts in only one way? Are you actually planning to build this in hardware? - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> 09:20, 25 August 2012 (MDT)</dd></dl></dd></dl>
<dl><dd><dl><dd><dl><dd>Well, after writing it I did think of making it switch a larger amount for mirroring (since the main routine ROM does not need to be very large), or have that byte of RAM mapped to $4xxx somewhere. --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> 10:26, 25 August 2012 (MDT)</dd></dl></dd></dl></dd></dl>

<!-- 
NewPP limit report
CPU time usage: 0.012 seconds
Real time usage: 0.013 seconds
Preprocessor visited node count: 1/1000000
Preprocessor generated node count: 4/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 1/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:835-1!*!0!*!*!*!* and timestamp 20160208230119 and revision id 4293
 -->
</div></body></html>