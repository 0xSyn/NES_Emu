<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Talk:PPU registers</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>Talk:PPU registers</h1><div class="article">
<div class="toc" id="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Naming_the_registers"><span class="tocnumber">1</span> <span class="toctext">Naming the registers</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Palette"><span class="tocnumber">2</span> <span class="toctext">Palette</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Emphasis_bits"><span class="tocnumber">3</span> <span class="toctext">Emphasis bits</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Allcaps_vblank.3F"><span class="tocnumber">4</span> <span class="toctext">Allcaps vblank?</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Immediately.3F"><span class="tocnumber">5</span> <span class="toctext">Immediately?</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Naming_the_registers">Naming the registers</span></h2>
<p>Am I the only one being annoyed by those &quot;PPUMASK&quot; &quot;PPUSCROLL&quot; etc... names ?
Because Mr Tepples often refers them as it doesn't mean everyone often refers them as it. I like to use plain $2000, $2005, etc...
Personally I'd vote for removing references to those names from the Wiki but I don't want to force it if other people disagree.
Bregalad 21:29, 24 February 2010 (UTC)
</p>
<hr/>
<p>It depends. It's not only Tepples that promoted those names. I'm a firm believer that using symbolic constants makes the code easier to read.  As long both are available in the wiki I don't see the issue.
</p><p>I can give you an example as code.  Which one is clearer when you read back the code?
</p><p>This:<br/>
</p>
<pre>lda #%1010000
sta $2000
</pre>
<p>Or:
</p>
<pre>; In another file (nes.h)
PPU_CTRL_NMI %10000000
PPU_CTRL_SPRITE8x16 %00100000
PPU_CTRL $2000

...

; Somewhere in the code
lda #PPU_CTRL_NMI + PPU_CTRL_SPRITE8x16
sta PPU_CTRL
</pre>
<p>Once you know the convention, it makes the code easier to read. Of course for the registers only it could be argued for a while since there is not that much on the nes but it's always good to follow good programming practice. In a professional environment, I will always promote the second once since it makes the code clearer.
</p><p>You don't know how many time I saw code samples for newb with no comments at all and you have to figure out what the hell was done with anonymous labels to make it worst. At the least those constants give some visual feedback on what you're trying to do. It's only a matter of getting used to the naming convention.
</p><p>In brief, I think it's a good practice to use them but nobody is forcing you do to so. There's just there to try to make a convention and of course not everyone will agree with it (i.e. see how many linux distro..)
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 01:35, 25 February 2010 (UTC)
</p>
<hr/>
<p>Well it's fun because I always do it like your &quot;bad example&quot; exept I write numbers in hex instead of binary, and I never had problems reading it. Symbolic names just makes the thing longer and more confusing. In fact I think it is the exact opposite of what you said - it makes things harder to read in my opinion. Then it depends if you remember best words or numbers - I know I remember numbers better personally.
</p><p>Like you said, as long as there is both there isn't any problem... but my issue is that I found several pages on the Wiki which ONLY refers the symbolic names which are nothing official anyways. So my proposal would be to not touch this page, but change the others to mirror the numbers (e.g. $2001) instead of symbolic names that makes few sense (PPUMASK really makes no sense to me it sounds like carnival or something).
</p><p>Again I don't want to force anything but I'd vote for at least replacing all instances which ONLY have the symbolic names to show the true register instead.
Bregalad 08:20, 25 February 2010 (UTC)
</p>
<hr/>
<p>I was not aware that some page of the wiki only refer to the name.  In that case, yes it can be confusing since there is no official standard for naming them.  To make both crowd happy, we could always put both at the same time too. 
</p><p>Which pages are like that?
</p><p>As for using constants For the registers, the benefit is quite negligible since there is not that much but for flags or your own values in your game, it will save you from many headache when you use the same value many time.  Of course, if you use long name and you have to remember all of them by heart, everybody will agree with you and say it's quite a pain in the butt (I do agree) but with a good editor, the editor will give you suggestion once you start to type a word. For example, in Visual Studio, Eclipse and many IDE, if I would type PPU, it would give me a suggestion list of all the words that start with PPU.  In the case of nes programming this is an issue because there is no such editor that gives that functionality. I wanted to make one for that reason since I cannot remember all my constants, which is normal.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 12:05, 25 February 2010 (UTC)
</p>
<hr/>
<dl><dd>See <a class="external text" href="http://problemkaputt.de/gbatek.htm" rel="nofollow">GBATEK</a> for the kind of style that I was attempting to follow when I instituted the PPU registers' names in the first place. The GBA community never refers to registers by their address. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 12:55, 25 February 2010 (UTC)</dd></dl>
<hr/>
<p>Tepples there is a big difference : The NES adresses are 16-bit and so you only have 4 digits per adress, which makes them much easier to remember.
Another big differences is that all those names are made up - they are nothing official and probably aren't &quot;often refereed as&quot; as this page says
Ian Bell uses the following definitions in his open source &quot;tank demo&quot; so if anything were to be official it'd look more like this (and again I doubt it's official it's probably made up by Ian Bell himself) :
</p>
<pre>VCR:		EQU	$2000	; video control reg base address
VIDEO0:		EQU	VCR+000	; CTRL0
VIDEO1:		EQU	VCR+001	; CTRL1
VSTAT:		EQU	VCR+002	; video general status register
OAM_ADR:		EQU	VCR+003 ; sprite attribute address register
SCROLL:		EQU	VCR+005 ; scroll h/v registers appear here
VRAM_ADR:		EQU	VCR+006	; video address register
VRAM_DAT:		EQU	VCR+007	; video data register

SPRITE_DMA_ADR	EQU	$4014
WRST		EQU	$4015	; DMA WRST/RDST

CONTROLLER1:	EQU	$4016		; Joystick and DMA
CONTROLLER2:	EQU	$4017		; Ports
</pre>
<p>So according to what Banshaku said, I guess I can go ahead and remove places where registers are refereed only by their GBA-style name and replace them with true adreses. If this cause problems someone can still undo the changes.
--Bregalad 15:10, 25 February 2010 (UTC)
</p>
<hr/>
<dl><dd>Game Boy addresses are 16-bit, yet the same fellow behind GBATEK also wrote <a class="external text" href="http://problemkaputt.de/pandocs.htm" rel="nofollow">Pan Docs</a>. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 16:02, 25 February 2010 (UTC)</dd></dl>
<hr/>
<p>We should just be careful thought. It's not because there is no official naming convention coming from Nintendo that we cannot make our own in the first place. If we go that extreme, we could say that we don't agree with Loopy_V/Loopy_T naming convention because that is not official too.
</p><p>There is nothing wrong to try to make a naming convention that seems simple for new users.  The one shown above is not any simpler the the currently proposed one on the wiki.  It's all a mater of preference. Don't forget that people have complained many time that the wiki was &quot;not organized&quot; so we shouldn't shoot down people that try new ideas. There is nothing wrong we that. You may have missed that Ddribin did some example in it's own sandbox for some possible formatting and naming convention <a href="User_Ddribin_PPU_Sandbox.xhtml" title="User:Ddribin/PPU Sandbox">here</a>. I thought his idea was interesting and it passed under the radar of everyone.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 23:46, 25 February 2010 (UTC)
</p>
<hr/>
<p>I just noticed this mass-removal of named registers and it's ridiculous. The point of this Wiki is to make thigs clearer. Using numeric addresses everywhere adds needless detail and harms its primary purposes of educating NES programmers.
</p><p>The point of using an assembler is to work at a higher level than machine code. The assembler allows you to use the names of instructions rather than their op codes. Likewise, it allows one to give addresses names and work with them. Labels in programs are one example, and named constants are another. If one really believed that using hexadecimal values instead of named registers was good, one would have to argue the same for labels and instructions, and thus use only .byte directives in the assembler.
</p><p>New NES programmers have plenty to remember already. Being able to say PPUSTATUS instead of $2002 lightens their mental load, and reminds them of the register's purpose wherever it's used, without having to look anything up. Even an experienced NES programmer who takes a break will have to re-learn the values to some extent, and make more errors during the process.
</p><p>All NES programmers make typos when programming. Making a typo on PPUSTATUS will result in an assembler error in almost all cases, rather than a program that misbehaves. Making a typo on $2002 can easily result in a program that assembles fine but fails to work, without any way to easily find the typo.
</p><p>When a programmer is reading source, addresses like $2002, $2003, $2005 all tend to look somewhat alike, while PPUSTATUS, SPRADDR, and PPUSCROLL are more distinct, and can be set up as keywords for the syntax highlighter.
</p><p>If one is used to using numeric addresses, he will have to learn the names for them, but this has none of the disadvantages listed above. The names are based on the function, rather than arbitrary numbers. And misremembering a name will be caught almost immediately. I can't help but think that the desire for removal of names is to avoid having to learn them, or make up for deficient tools or something.
</p><p><s>Blargg</s> 22:18, 28 February 2010 (UTC)
</p>
<hr/>
<p>It's a battle of the B's, and I'm still the odd one out even after buying a copy of Bee-52 :-)
</p><p>Martin Korth uses purported official names in GBATEK and Pan Docs, but he appears not to use names in <a class="external text" href="http://problemkaputt.de/everynes.htm#iomap" rel="nofollow">Everynes</a>.
My early GBA header files used different names from the names in GBATEK.
Part of this was to be different on purpose to avoid appearing to support the use of unlawfully acquired trade secrets.
What are &quot;official&quot; names other than names in leaked Nintendo manuals?
The other part was to take advantage of the various arrays implicit in the GBA register map.
In fact, some elements of my naming scheme, particularly with respect to these arrays, eventually made it into devkitPro's libgba header file, which otherwise follows GBATEK. (See for example BGCTRL[].)
</p><p>So, Bregalad, do you object to the idea of having the community invent a consistent set of names, or do you just object to the specific names I invented? --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 02:44, 1 March 2010 (UTC)
</p>
<hr/>
<p>I tend to agree to what Blargg said.  Making a typo on a name will make the compiler fail but a typo on an address won't.  By using constant you avoid that possible issue.
</p><p>For beginners, those constants are a must.  How many times when we look at the code sample they send that we can be sure that they really meant $200X and it was not a typo? With the constant, it makes it plain obvious and easier to correct them.
</p><p>I think it will be hard to make everyone happy in that case. For now, we only have one person objecting to this naming convention. I just checked the updated page and since I didn't program the nes for a while it didn't make any more sense to me anymore. When you have to juggle with many platforms during the day, constants and the proper tools the way to go.  If I could find an editor that do some intellisense with my own defined constant I would be happy. I need to check if Notepad++ can do it, that would be great.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 03:57, 1 March 2010 (UTC)
</p>
<hr/>
<p>Well I don't know. You guys says a newbie already have a lot of things to learn, but learning those confusing names just sounds like one more thing to learn to me. Remembering &quot;PPUSTATUS&quot; you have to remember 9 letters instead of 4 numbers in $2002 which is more complicated (you really have to remember 1 number, because the first 3 are always $200x).
I also disagree about the typo things, you can't really do a typo when typing &quot;$2002&quot; without noting it immediately, however you can very easily do typos with words.
</p><p>You are right tough about that there is no reason the community can't made up names - and I wasn't intending we should replace those names by more &quot;official&quot; names, just using the register is fine for me. My references to Ian Bell's code (which isn't really &quot;leaked&quot; since he did give it himself on purpose to the community) was misplaced - I didn't intend to use them.
</p><p>About the argument that it would be less confusing when switching to from a system to another, I disagree. Every system has other registers anyways so it wouldn't change a thing.
</p><p>I just think most of those name didn't make sense to me and are too long to be remembered, but I don't really care if you all like them go away and use them (and undo my modifications), I'll just not use them in my code and anyone is free to use them. It's just that I figured those names caused me trouble as I always had to had the registers page open in another tab to convert from those names to actual registers.Bregalad 07:57, 1 March 2010 (UTC)
</p>
<hr/>
<p>- It's not ridiculous. I don't play very often with NES assemblers, but I suppose that those labels should be pre-defined in an header file perhaps? Really, it's pointless. The $2002 means PPUSTATUS; fine. Is this more educational than $2002? Do you know about ppu address mirroring, of address AND 7, just for the case?
</p><p>- Personally, I prefer the numbered registers instead of labeled ones. If it's not part of a compiler, it's up to the user to define a couple of labels. Yup, it avoids errors, but I _really_ dunno you would do such mistake; probably, your algorithm or opcode usage has more chances to spot an error than a $200X &quot;whoops&quot;.
Zepper, 1 March 2010
</p>
<hr/>
<p><br/>
As for number of characters to remember: &quot;PPU&quot; is a concept, and &quot;status&quot; is a concept, and humans are better at remembering concepts.
It's easier to remember a name like &quot;Jennifer&quot; than a phone number like &quot;903-5768&quot;.
Otherwise, why do we even use assemblers at all? &quot;LDA #&quot; has more characters than &quot;A9&quot;.
</p><p>Different people have historically used different names.
What MOS Technology, its second sources, and ARM call &quot;EOR&quot; everyone else calls &quot;XOR&quot;.
Likewise, Sony's highly-6502-inspired SPC700 CPU uses different mnemonics even for instructions that by rights should be the same.
&quot;MOV A,X&quot; could have been &quot;TAX&quot; for familiarity to people who have programmed the NES and the other half of the Super NES.
</p><p>Bare addresses have different purposes based on what bus they're on.
Is $2000 the first PPU control register, or is it the start of the first nametable?
</p><p>Register address mirroring is probably more useful to emulator developers and people trying to obfuscate or digitally fingerprint code than to developers of original NES software. 
</p><p>Yes, the constants should be predefined in a header file, and the header file should be on this wiki.
I fully intend to make such a header file at least for ca65 once we standardize the names and other parts of the style guide.
</p><p>--<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 17:07, 1 March 2010 (UTC)
</p>
<hr/>
<p>You are right that concepts are easier to remember than numbers.
However you say that if I don't use the labels you made up to assign registers, I might as well not use an assembler, which is absolutely not what I meant. I am not against labels as a whole - I am just against the fact that some labels one guy made up were used on this wiki instead of the real addresses of the register without any reference to the real address next to it, and that the name of the labels themselves didn't make much sense to me.
</p><p>I completely disagree that this should avoid errors. Since I started coding for the 6502 I've had to deal with MANY typo errors, but they were always for other reasons (misspelling of labels, bad use of anonymous labels and confusion betwen X and Y should hold the top tree (X and Y are one next to the others here, unlike english keyboards)). So if you really want to use the labels on the wiki go ahead, but then also refer to the register name, or at lest link to it, so that people who don't make any sense from these names can have an idea what you are talking about.Bregalad 17:48, 1 March 2010 (UTC)
</p>
<hr/>
<p>The comment about not using an assembler at all was a bit of <a class="extiw" href="https://en.wikipedia.org/wiki/hyperbole" title="wikipedia:hyperbole">hyperbole</a>. I have a disability that sometimes makes it difficult for me to discern the line between what is acceptable and what is not. As a coping mechanism, I sometimes use hyperbole to establish lower and upper bounds for the discussion. But if the solution is to link to the article defining the labels from every other article that uses the labels, I have no problem with that. Redirects would help with that; it'd be as easy as, say, <code>[[PPUSTATUS]]</code>. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 18:44, 1 March 2010 (UTC)
</p>
<hr/>
<p>- Quick question: perhaps other people want to debug or trace your code using a disassembler. Does it display $2002 or PPUSTATUS? ;) So, it's something fully optional, including empirical labels for such registers. Well, regarding $2000, it was silly. We have CPU and PPU addressing the things! How would you differ the labels?
--<a href="User_Zepper.xhtml" title="User:Zepper">Zepper</a> 21:25, 1 March 2010 (UTC)
</p>
<hr/>
<p>Quick answer: The disassembler displays whatever label set you have loaded in. It starts with just the 30 registers of the NES, but as I learn more about how a game works, the label set fills up with memory locations and subroutine entry points. If I really wanted to thwart disassembler users, I could have the assembler generate 10 random bits and make them different for every access to the PPU registers. This brings up another idea: if we make a header file for ca65, we could also make a label file for FCEUX. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 21:41, 1 March 2010 (UTC)
</p>
<hr/>
<p>Actually, I don't know any disassembler with such feature. Plus, there are lots of good h4ck3r5 that uses only an hexa editor. ^_^;; But perhaps it's another story. --<a href="User_Zepper.xhtml" title="User:Zepper">Zepper</a> 21:56, 1 March 2010 (UTC)
</p>
<hr/>
<p>Here's an example of what I'm using in all my nes project: <a href="User_Banshaku_CA65_Constants.xhtml" title="User:Banshaku/CA65 Constants">CA65 constants</a>. Yes, the name are verbose because I'm trying to find a naming convention that make sense. I'm still in a trial and error process.  I always had that file open when I need to use them but I found out that with Notepad++ you can create a list of word that can work like intelissense in Visual studio. This mean I won't need to remember them anymore once I create that file for my editor.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 23:34, 1 March 2010 (UTC)
</p>
<hr/>
<p>The debugger in FCEUXD (and subsequent derivatives like FCEUXD SP and FCEUX) has such feature: <a class="external text" href="http://fceux.com/web/fceux-2.0.2.htm?{8A78E5FE-C7EB-418D-A921-F9A6782663F0}.htm" rel="nofollow">NL files</a>. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 17:16, 2 March 2010 (UTC)
</p>
<hr/>
<p>Say someone discovers a new CPU architecture, but no official document about its instruction set was disclosed to the public. Examples include the microcontroller in the NES and SNES CIC and the CPU in the Pokemon mini video game system. What mnemonics should appear in documents about the CPU designed for an emulator author or in a debugging emulator's disassembler? --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 21:21, 4 March 2010 (UTC)
</p>
<hr/>
<p>Given all I said above, I have to say that the current names (PPUXX) are not that readable (to me at least), due to the repeated prefix.
</p>
<pre>PPUCTRL
PPUADDR
PPUDATA
</pre>
<p>Those just meld into a mess to my eyes. These are for some reason much more readable to me:
</p>
<pre>PPU_CTRL
PPU_ADDR
PPU_DATA
</pre>
<p>It may be that I'm partial to underscores, using them heavily in naming in all the languages I use. But I think visually it makes the beginning of the second part visually distinct so the eye can quickly make out the shapes of the beginning. Lowercase might of course be better as well, but I think that lowercase isn't the best idea to use for registers, as the uppercase makes it clear in code that it's not just some variable.
</p>
<dl><dd>Remembering &quot;PPUSTATUS&quot; you have to remember 9 letters instead of 4 numbers in $2002 which is more complicated (you really have to remember 1 number, because the first 3 are always $200x).</dd></dl>
<p>Memorizing PPUSTATUS is just memorizing PPU + STATUS, for a register that gives the current status of the PPU. Remembering $2002 is remembering the base address of the PPU ($2000, an arbitrary value) and an arbitrary offset (+2). And when you recall $2002, you can't be sure you remembered it correctly without consulting something.
</p>
<dl><dd>I just think most of those name didn't make sense to me and are too long to be remembered, but I don't really care if you all like them go away and use them (and undo my modifications), I'll just not use them in my code and anyone is free to use them. It's just that I figured those names caused me trouble as I always had to had the registers page open in another tab to convert from those names to actual registers.</dd>
<dd>[...]</dd>
<dd>So if you really want to use the labels on the wiki go ahead, but then also refer to the register name, or at lest link to it, so that people who don't make any sense from these names can have an idea what you are talking about.</dd></dl>
<p>So you're saying you have trouble remembering the names of registers, but not their addresses? This is an odd argument, because the whole point I'm making is that new NES programmers have to remember arbitrary addresses, which is more difficult. It seems your whole argument comes down to &quot;I've memorized the addresses, but not the names, and I don't want to memorize the names, therefore names are bad.&quot;
</p><p>I won't avoid admitting that the biggest problem with names is agreeing on them and then using them consistently. You don't have that problem with addresses, save for choosing the base (hex, decimal, or perhaps binary heh).
</p>
<dl><dd>I completely disagree that this should avoid errors. Since I started coding for the 6502 I've had to deal with MANY typo errors, but they were always for other reasons (misspelling of labels, bad use of anonymous labels and confusion betwen X and Y should hold the top tree (X and Y are one next to the others here, unlike english keyboards))</dd></dl>
<p>How do you know you haven't ever made a typo for a register address? The whole point is that there is no way to reliably diagnose them.
</p>
<dl><dd>The comment about not using an assembler at all was a bit of hyperbole.</dd></dl>
<p>Actually, I meant it somewhat seriously. There are probably some old-time programmers who prefer to write machine code instead of assembler, because they find the mnemonics confusing and obfuscating of the actual opcodes.
</p><p>The main point was that the argument against symbolic names applies to mnemonics as well. In both cases, you don't see the actual value generated, just the name. The argument against symbolic names because they're confusing or hard to remember applies equally well to mnemonics. If the arguer is fine with mnemonics, it shows that he has not discovered his actual reasons for being against symbolic names. One likely explanation is that his argument is simply for things he's familiar with, and against things he's unfamiliar with. There's nothing wrong with that as a personal approach to things, but it's not suitable for community decisions.
</p><p>And in case it's not clear, the idea of using symbolic names here is that the page describing the register shows its numeric address, and perhaps a register summary as well. Any other page mentioning the register just uses its name, which is also a link to the page describing the register (and thus giving its numeric address).
</p><p><s>Blargg</s> 17:07, 6 March 2010 (UTC)
</p>
<hr/>
<p>As for the underscores, I always been using then in my <a href="User_Banshaku_CA65_Constants.xhtml" title="User:Banshaku/CA65 Constants">CA65 constants</a> since when you uses all caps, you cannot distinguish were the words end. If I define variables, you can always do zpJoy1Status and you can read it quite easily.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 02:36, 7 March 2010 (UTC)
</p>
<hr/>
<p>Well Blarg you're probably right, I remembered the address instead of the names just because that's what I used first. If the very first &quot;hello world&quot; program example I've used would have used the symbolic names instead, maybe things would be different.
In all cases, I think it's good practice if any reference to a register is wiki-linked to the description to the said register - but I find it the most consusing where there is a symbolic name, no address and no wiki-link. Also I have to say it looks much better with underscores to me. Bregalad 19:12, 10 March 2010 (UTC)
</p>
<hr/>
<p>I too remember the NES addresses better than the symbolic names, because I also started without names. Symbolic names should be used throughout the Wiki, but it should still make it easy for those who learned without the names to understand. I agree that mentions of registers should have links to the pages describing them, and any other minor things to help.
</p><p><s>Blargg</s> 19:34, 11 March 2010 (UTC)
</p>
<hr/>
<p>I see we're coming to a consensus.  I will see if I can find time and first change the name with underscores then revise the wiki so that all reference to them link back to the actual topic about it.
</p><p>Is there any name that may still be hard to understand? For example, I didn't know why PPU_MASK was used. Maybe it's something in English that I'm not used to hear.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 01:04, 12 March 2010 (UTC)
</p>
<hr/>
<p>I understand the name because it masks out (hides) the left pixels, or non-red/non-green/non-blue/all colors, or entire layers. Since the functionality is enable, clip and color emphasis: I'm not certain what a better collective name is.
</p><p><a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> 14:28, 12 March 2010 (UTC)
</p>
<hr/>
<p>Lidnariq was on the right track: see <a class="extiw" href="https://en.wikipedia.org/wiki/Mask_(computing)" title="wikipedia:Mask (computing)">wikipedia:Mask (computing)</a>. When you mask off bits in the register, you mask off parts of the screen. When you turn on bit 0, it masks off bits 3-0 of each palette entry. And if bits 1-4 are the <a class="extiw" href="https://en.wikipedia.org/wiki/Gobo_(lighting)" title="wikipedia:Gobo (lighting)">gobo</a>, bits 5-7 are the <a class="extiw" href="https://en.wikipedia.org/wiki/Color_gel" title="wikipedia:Color gel">gel</a>. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 14:52, 12 March 2010 (UTC)
</p>
<hr/>
<p>Well it still don't make sense to me. PPU is a integred ciruit in the NES, mask is something that is meant to be put on a head. &quot;Video Control&quot; or &quot;Rendering Control&quot;, &quot;Video Switches&quot;, or something like that would make more sense to me.Bregalad 11:07, 13 March 2010 (UTC)
</p>
<hr/>
<p>You have the same reaction as me because maybe we share something in common: we're French natives. Maybe mask is used in English in other ways that we are not used to hear in daily conversation.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 12:54, 13 March 2010 (UTC)
</p>
<hr/>
<p>What we could do is use the name of each register's closest counterpart on a Nintendo platform for which the homebrew community has adopted &quot;official&quot; names. For example, on the Game Boy Advance:
</p>
<ul><li>$2000 is <a class="external text" href="http://problemkaputt.de/gbatek.htm#lcdiobgcontrol" rel="nofollow">BG0CNT</a></li>
<li>$2001 is <a class="external text" href="http://problemkaputt.de/gbatek.htm#lcdiodisplaycontrol" rel="nofollow">DISPCNT</a></li>
<li>$2002 is <a class="external text" href="http://problemkaputt.de/gbatek.htm#lcdiointerruptsandstatus" rel="nofollow">DISPSTAT</a></li>
<li>$2005 is <a class="external text" href="http://problemkaputt.de/gbatek.htm#lcdiobgscrolling" rel="nofollow">BG0HOFS and BG0VOFS</a></li></ul>
<p>But then it falls apart for $2003, $2004, $2006, and $2007. Unlike on the NES and Super NES but like on the Game Boy, the GBA's VRAM, OAM, and CGRAM are memory-mapped.
--<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> 16:19, 13 March 2010 (UTC)
</p>
<hr/>
<p>This naming convention makes almost no sense just by looking at it.  The PPU_SOMETHING makes more sense already. It doesn't mean that it's official that the naming is better.
</p><p><a href="User_Banshaku.xhtml" title="User:Banshaku">Banshaku</a> 02:57, 14 March 2010 (UTC)
</p><p>I don't really have a problem with naming the registers, especially since I haven't seen any official sources come up with their own names for them.  Also, Bregalad, it makes more sense to
name $2001 PPUMASK (or some variation on that) if you think of masking in a broader sense.  Like,
one might mask their face by concealing it with a mask, but one might try to mask the foul odors
in a room by putting in air fresheners, or mask their presence by camoflage.  In this way, it becomes easier to consider that a programmer may mask or reveal sprites and the background by using the register at $2001.
</p><p>And nobody is forcing anybody to use the names Tepples has provided, or any names at all.
</p><p>--<s>Doppel</s> 20:25, 22 September 2011 (UTC)
</p>
<hr/>
<p>Should mention that the overflow flag is cleared at the start of the pre-render line here. (Posting to get account activated.) -<a href="User_Ulfalizer.xhtml" title="User:Ulfalizer">Ulfalizer</a> (<s>talk</s>) 18:45, 15 March 2013 (MDT)
</p>
<h2><span class="mw-headline" id="Palette">Palette</span></h2>
<p>$3F00-$3FFF has no palette data. Well, I would understand &quot;palette&quot; as RGB entries, or similarly. What's stored in that space are color indexes, not palette data. --<a href="User_Zepper.xhtml" title="User:Zepper">Zepper</a> (<s>talk</s>) 18:21, 27 March 2013 (MDT)
</p>
<dl><dd> Many other parts of the Wiki (e.g. <a href="PPU_palettes.xhtml" title="PPU palettes">PPU_palettes</a> and the &quot;palette&quot; entry on <a href="Glossary.xhtml" title="Glossary">Glossary</a>) use &quot;palette&quot; when referring to the $3F00-$3FFF range though, and switching to &quot;color index&quot; might be confusing. To me, a palette is just a set of colors, regardless of representation. -<a href="User_Ulfalizer.xhtml" title="User:Ulfalizer">Ulfalizer</a> (<s>talk</s>) 00:33, 28 March 2013 (MDT)
<dl><dd> I disagree. When you dump $3F00 region, there are no &quot;colors&quot; or palettes like in other systems, but a 256-bit number, or 32 palette indices. At anyway, that's me. :) --<a href="User_Zepper.xhtml" title="User:Zepper">Zepper</a> (<s>talk</s>) 18:20, 28 March 2013 (MDT)
<dl><dd> There is no reason &quot;palette&quot; should imply &quot;RGB&quot;. And they do contain HSL entries.—<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 18:51, 28 March 2013 (MDT)
<dl><dd> One thing is the hardware palette. Another thing is the <a class="external text" href="http://en.wikipedia.org/wiki/CLUT" rel="nofollow">colour look-up table</a>, that's what the NES does. --<a href="User_Zepper.xhtml" title="User:Zepper">Zepper</a> (<s>talk</s>) 20:24, 28 March 2013 (MDT)
<dl><dd> You'll notice that this article explicitly refers to the CLUT as a palette. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> (<s>talk</s>) 22:24, 28 March 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl></dd></dl>
<dl><dd>I disagree. &quot;Palette&quot; means exactly a selection of colours. It does not mean &quot;RGB data&quot;, not at all, unless that is the type of palette you are using. VGA has a 256-colour palette. EGA has a 16-colour palette. CGA has a 4-colour palette. NES has 8 4-colour palettes. <a class="external text" href="http://inseansopinion.files.wordpress.com/2010/04/palette.jpg" rel="nofollow">This palette</a> has 6 colours. The format of how a particular colour is specified is specific to the hardware, but ultimately the data is an index, yes, whether that index is RGB, RGBA, HSV, greyscale, or the NES' form. The larger selection of colours which the palette can be built from may also be called a palette (though for clarity's sake it's probably best not to call both the full gamut and the limited on-screen selection &quot;palette&quot; in the same sentence). What I am saying is that &quot;palette&quot; is the most precise, accurate, and common term to use for this. I think it is also a &quot;color index&quot;, and a &quot;color lookup table&quot;, but palette is the most useful thing to call it. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> (<s>talk</s>) 22:20, 28 March 2013 (MDT)
<dl><dd> All about &quot;palette&quot; I mean RGB entries OR <b>similarly</b>. When a <i>normal user</i> dumps $3F00, he won't find colors (RGB or whatever format you wish), but just a lookup table, so that's what I meant and only that. Also, it <b>IS</b> a color lookup table, unless _Q says it isn't. AFAIK, there's no direct access to the <i>hardware colors</i>. --<a href="User_Zepper.xhtml" title="User:Zepper">Zepper</a> (<s>talk</s>) 14:21, 29 March 2013 (MDT)
<dl><dd> It is a palette, of colors specified in voltage/phase format, not RGB. But it is a lookup table to select the color (in voltage/phase format) from the pattern table, nametable, and attribute table data, reading from the palette memory, and then output according to the voltage/phase (or using a further lookup table to a RGB palette stored in ROM, in the case of RGB Famicom). --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 14:28, 29 March 2013 (MDT)</dd>
<dd> What do you consider &quot;similar&quot; to RGB? What is &quot;whatever format you wish&quot;? What are &quot;hardware colors&quot;? (Also what is a &quot;normal user&quot; who is dumping PPU contents but neglected to learn what they contain?) I don't understand what you think is special about the NES' colour data format that isn't equally special about every other possible way to encode colours. There is no &quot;hardware&quot; colour table hiding in the PPU that this is an index to, it is just a bit-packed number that gets translated directly into the video signal. There is no RGB data in an NES, you would only find it in an emulator that uses an RGB lookup table to translate for RGB hardware. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> (<s>talk</s>) 18:32, 5 April 2013 (MDT)
<dl><dd> There's no RGB data in a frontloader or NES-101, but there is in 2C03-powered Famiclones manufactured by Sharp under license from Nintendo: <a class="extiw" href="https://en.wikipedia.org/wiki/C1_NES_TV" title="wikipedia:C1 NES TV">C1 NES TV</a> and <a class="extiw" href="https://en.wikipedia.org/wiki/Famicom_Titler" title="wikipedia:Famicom Titler">Famicom Titler</a>. In any case, there are two stages that could be described as &quot;palette lookup&quot;: lookup in $3F00-$3F1F (under the program's control), and then lookup in either the NTSC signal generator or the RGB table (not under the program's control). --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> (<a href="User_talk_Tepples.xhtml" title="User talk:Tepples">talk</a>) 18:52, 5 April 2013 (MDT)
<dl><dd> I think the point of pedantry is that <i>there is no &quot;lookup&quot; in the 2C02</i>. The value stored in $3Fxx <i>is</i> the direct value written to the analog output stage, much as the values written to the 2600's COLUPx registers are, or the values written to the TG16's register at $FF:$0404 are the direct 9-bit values written to the video DACs.  (Tangentially: are there a canonical set of register names for the TG16?) —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 19:23, 5 April 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl></dd></dl>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd><dl><dd> Actually, the real point I was trying to make is that &quot;palette&quot; is the standard term for what this is (and has been on every single platform I've ever developed for), and it's also completely consistent with its dictionary definition. Claiming that it's different because it's not RGB, and should be called a &quot;lookup table&quot; instead will only serve to obfuscate its definition. I think Zepper is confused about what palette actually means, and is arguing to change the terminology in the article to fit his confusion. As for the VS/Sharp PPU variants, yes they may actually have a hardware RGB lookup table. I don't think it's useful to call the NTSC signal generator a &quot;lookup&quot;, but if you want to make an academic argument that it does the same thing, sure. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> (<s>talk</s>) 19:39, 5 April 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl></dd></dl></dd></dl>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd><dl><dd><dl><dd> [Edit conflict] It is a lookup. To continue the pedantry: In the 2C02, there's still a layer of digital &quot;decoding&quot; after $3Fxx lookup and before the output stage. A hue of 8 might be decoded to 00111111, 11110000, or 00000011 depending on the phase, a hue of 0 to 11111111, and a hue of D to 00000000. How do I give a citation in <a href="Visual_2C02.xhtml" title="Visual 2C02">Visual 2C02</a>? --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> (<a href="User_talk_Tepples.xhtml" title="User talk:Tepples">talk</a>) 20:16, 5 April 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl></dd></dl></dd></dl></dd></dl>
<dl><dd><dl><dd><dl><dd> @Rainwarrior: too bad you have fired me with a bunch of &quot;why this?&quot;, &quot;why that&quot;... a sign of lack of respect, unfortunately. I really refuse to clarify anything. --<a href="User_Zepper.xhtml" title="User:Zepper">Zepper</a> (<s>talk</s>) 11:22, 6 April 2013 (MDT)</dd></dl></dd></dl></dd></dl>
<dl><dd><dl><dd><dl><dd><dl><dd> Then please clarify it to <i>me</i>. <a class="extiw" href="http://c2.com/cgi/wiki?LaynesLaw" title="wiki:LaynesLaw">Definition disputes derail discussions</a>. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> (<a href="User_talk_Tepples.xhtml" title="User talk:Tepples">talk</a>) 13:25, 6 April 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd> This discussion is <i>about</i> a definition. Ironically the stuff about what the hardware does internally was the more derailed part. My argument is that this data stored in the PPU is a palette, as this data directly specifies a &quot;<a class="external text" href="http://en.wikipedia.org/wiki/Palette" rel="nofollow">selection of colours</a>&quot; for the NES to use, and similar things have been called a palette on <a class="external text" href="http://en.wikipedia.org/wiki/List_of_videogame_console_palettes" rel="nofollow">all</a> <a class="external text" href="http://en.wikipedia.org/wiki/List_of_8-bit_computer_hardware_palettes" rel="nofollow">sorts</a> <a class="external text" href="http://en.wikipedia.org/wiki/List_of_16-bit_computer_hardware_palettes" rel="nofollow">of</a> other platforms. Zepper's argument is that it is not a palette, and all of my questions are asking what reason he thinks it should not be called so. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> (<s>talk</s>) 19:00, 6 April 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl></dd></dl>
<dl><dd><dl><dd><dl><dd><dl><dd> I asked a question about each thing I do not understand. If I did not respect you I would not ask. As I've stated, it is my strong opinion that &quot;palette&quot; is the correct word to use, and I think trying to avoid this term in favour of &quot;lookup table&quot; will make it harder to understand for others. Please do not confuse my opinion of how these terms should be used with my opinion of you. As I said earlier, palettes are more generally indices and lookup tables, and it is fine to mention that it is also these things, but this data is still a palette, and that word is the most useful one we can be using for it. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> (<s>talk</s>) 18:41, 6 April 2013 (MDT)</dd></dl></dd></dl></dd></dl></dd></dl>
<h2><span class="mw-headline" id="Emphasis_bits">Emphasis bits</span></h2>
<p>It says the emphasis bits are unused if the selected color is $xE and $xF. Is this true with RGB as well or only with composite? --<a href="User_Zzo38.xhtml" title="User:Zzo38">Zzo38</a> (<a href="User_talk_Zzo38.xhtml" title="User talk:Zzo38">talk</a>) 16:40, 23 June 2013 (MDT)
</p>
<dl><dd> I PM'd Memblers to ask; he said that that behavior is only true for the 2C02/2C07; the 2C03,4,5 emphasis bits do not exclude those colors. —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 16:08, 2 June 2016 (MDT)</dd></dl>
<h2><span class="mw-headline" id="Allcaps_vblank.3F">Allcaps vblank?</span></h2>
<p>Just curious as to why vblank has been changed to VBLANK across the page? I understand allcaps register names as a convention for a defined constant, but I have no idea what this is supposed to signify for vblank. - <a href="User_Rainwarrior.xhtml" title="User:Rainwarrior">Rainwarrior</a> (<s>talk</s>) 11:20, 17 March 2015 (MDT)
</p>
<dl><dd>Just a guess, but it might be a progression from VBI (initialism for Vertical Blanking Interval) through VBL to vblank. --<a href="User_Tepples.xhtml" title="User:Tepples">Tepples</a> (<a href="User_talk_Tepples.xhtml" title="User talk:Tepples">talk</a>) 15:57, 17 March 2015 (MDT)</dd></dl>
<dl><dd> FWIW, it was <s>this</s> edit. —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 12:22, 18 March 2015 (MDT)</dd></dl>
<h2><span class="mw-headline" id="Immediately.3F">Immediately?</span></h2>
<p>The PPUCTRL section contains this sentence:
</p><p><i>To avoid this problem it is prudent to read $2002 immediately before writing $2000 to clear the vblank flag.</i>
</p><p>Which implies that all writes to PPUCTRL must look like this:
</p>
<pre>
bit PPUSTATUS
sta PPUCTRL
</pre>
<p>But is that really necessary? It seems like reading PPUSTATUS at any part in the NMI handler would be sufficient, so long as it happens before writing PPUCTRL. That's not &quot;immediate&quot; at all.
</p><p>The code below would work, no?
</p>
<pre>
nmi_handler:
  bit PPUSTATUS ; read at the start of NMI

  ; ... do some nmi stuff ...

  lda #PPUCTRL_NMI_ON
  sta PPUCTRL ; write to PPUCTRL several hundred cycles after reading PPUSTATUS
</pre>
<p><s>Pubby</s> (<s>talk</s>) 14:15, 2 June 2016 (MDT)
</p>
<dl><dd> My reading on that section is that it's describing how to safely write to PPUCTRL <i>outside</i> of the NMI handler. —<a href="User_Lidnariq.xhtml" title="User:Lidnariq">Lidnariq</a> (<a href="User_talk_Lidnariq.xhtml" title="User talk:Lidnariq">talk</a>) 15:58, 2 June 2016 (MDT)</dd></dl>

<!-- 
NewPP limit report
CPU time usage: 0.343 seconds
Real time usage: 0.415 seconds
Preprocessor visited node count: 33/1000000
Preprocessor generated node count: 84/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:396-1!*!0!!en!*!* and timestamp 20160603204735 and revision id 12490
 -->
</div></body></html>