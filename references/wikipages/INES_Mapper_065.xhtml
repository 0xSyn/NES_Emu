<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>INES Mapper 065</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>INES Mapper 065</h1><div class="article">
<p><strong class="selflink">iNES Mapper 065</strong> refers to games that use Irem's H3001 mapper.
</p>
<pre> Here are Disch's original notes:  
 ========================
 =  Mapper 065          =
 ========================
 
 
 Example Games:
 --------------------------
 Daiku no Gen San 2
 Kaiketsu Yanchamaru 3
 Spartan X 2
 
 
 
 Registers:
 --------------------------
 
   $8000:  PRG Reg 0 (8k @ $8000)
   $A000:  PRG Reg 1 (8k @ $A000)
   $C000:  PRG Reg 2 (8k @ $C000)
 
   $B000-$B007:  CHR regs
 
   $9001:  [M... ....]  Mirroring
     0 = Vert
     1 = Horz
 
   $9003:  [E... ....]  IRQ Enable (0=disabled, 1=enabled)
   $9004:  [.... ....]  Reload IRQ counter
   $9005:  [IIII IIII]  High 8 bits of IRQ Reload value
   $9006:  [IIII IIII]  Low 8 bits of IRQ Reload value
 
 
 On Powerup:
 ---------------------------
 On powerup, it appears as though PRG regs are inited to specific values:
 
   $8000 = $00
   $A000 = $01
   $C000 = $FE
 
 Games do rely on this and will crash otherwise.
 
 
 PRG Setup:
 ---------------------------
 
       $8000   $A000   $C000   $E000  
     +-------+-------+-------+-------+
     | $8000 | $A000 | $C000 | { -1} |
     +-------+-------+-------+-------+
 
 
 CHR Setup:
 ---------------------------
 
       $0000   $0400   $0800   $0C00   $1000   $1400   $1800   $1C00 
     +-------+-------+-------+-------+-------+-------+-------+-------+
     | $B000 | $B001 | $B002 | $B003 | $B004 | $B005 | $B006 | $B007 |
     +-------+-------+-------+-------+-------+-------+-------+-------+
 
 
 
 IRQs:
 ---------------------------
 
 This mapper's IRQ system is very simple.  There's a 16-bit internal down counter which (when enabled),
 decrements by 1 every CPU cycle.  When the counter reaches 0, an IRQ is fired.  The counter stops at 0 -- it
 does not wrap and isn't automatically reloaded.
 
 Any write to $9003 or $9004 will acknowledge the pending IRQ.
 
 Any write to $9004 will copy the 16-bit reload value into the counter.
 
 $9006 and $9005 set the reload value, but do not have any effect on the actual counter.  Note that $9005 is
 the HIGH bits, not the low bits.
</pre>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<ul><li><a class="external text" href="http://www.romhacking.net/documents/362/" rel="nofollow">NES Mapper List</a> by Disch</li>
<li><a class="external text" href="http://nesdev.com/mappers.zip" rel="nofollow">Comprehensive NES Mapper Document</a> by \Firebug\, information about mapper's initial state is inaccurate.</li></ul>

<!-- 
NewPP limit report
CPU time usage: 0.031 seconds
Real time usage: 0.033 seconds
Preprocessor visited node count: 5/1000000
Preprocessor generated node count: 16/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:665-1!*!*!*!*!*!* and timestamp 20160208225132 and revision id 10737
 -->
<p class="categories">Categories: <a href="Category_INES_Mappers.xhtml">INES Mappers</a>, <a href="Category_In_NesCartDB.xhtml">In NesCartDB</a>, <a href="Category_Mappers_with_cycle_IRQs.xhtml">Mappers with cycle IRQs</a></p></div></body></html>