<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>INES Mapper 176</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>INES Mapper 176</h1><div class="article">
<p>Mapper 176 is used by some Chinese games by <a class="extiw" href="http://www.wikia.com/wiki/c:bootleggames:Fuzhou_Waixing_Computer_Science_%26_Technology_Co.,LTD" title="wikia:c:bootleggames:Fuzhou Waixing Computer Science &amp; Technology Co.,LTD">Waixing</a> (aka WXN). At one point, FCEUX by way of fceumm rewired mapper 176 to be handled by the BMCFK23C board but it is unclear what that means. Hacked builds of VirtuaNesEX and Nestopia acquired support for this mapper, at least so far as to emulate &quot;水浒神兽&quot; (<i>Shui Hu Shen Shou</i>, Waixing ES-1087; literally &quot;Water Margin Animal&quot;; appears to be a <i>Pokémon</i>-style RPG). FCEUX supposedly acquired support for it in r2519 by reimplementing the mapper and getting BMCFK23C out of the picture.
</p><p>CaH4e3 insists that mapper 176 belongs to BMCFK23C or variants thereof, subject to some caveats: the prg may be wired differently, and there are 'protections' relating to different dip switches which connect to address bits and control which addresses the mappers respond to. Preliminary investigation bears this out, and the chinese test case above can be made to work as a BMCFK23C variant. Consequently, this whole document may be obsolete soon and turn into a BMCFK23C reference.
</p><p>This documentation is based on VirtuaNesEX's hack's and FCEUX's sources are somewhat non-representative of logical hardware. This documentation was reasoned out from those sources into a slightly more logical explanation; working sources should be considered authoritative.
</p><p>The initial PRG state is as follows:
</p>
<pre>     $8000   $A000   $C000   $E000  
   +-------+-------+-------+-------+
   |   0   |   1   |   62  |   63  |
   +-------+-------+-------+-------+
</pre>
<p>This is the case even for 1024KB roms where you might expect 127 and 128 instead. Perhaps the registers are only 6 bits. This distinction is significant. 
</p><p>By writing to $5FF1, you can effect the following:
</p>
<pre>     $8000   $A000   $C000   $E000  
   +-------+-------+-------+-------+
   |            &lt;$5FF1&gt;            |
   +-------+-------+-------+-------+
</pre>
<p>By writing $24 to $5010, you can set the 'SBW' mode bit. Once that bit is set, other registers become available for mapping control. There seems to be no way to clear the bit.
</p><p>By writing to $5001 with SBW set, you can effect the following:
</p>
<pre>     $8000   $A000   $C000   $E000  
   +-------+-------+-------+-------+
   |             $5001             |
   +-------+-------+-------+-------+
</pre>
<p>By writing to $5011 with SBW set, you can effect the following:
</p>
<pre>     $8000   $A000   $C000   $E000  
   +-------+-------+-------+-------+
   |            &lt;$5011&gt;            |
   +-------+-------+-------+-------+
</pre>
<p>There is a CHR register at $5FF2 with the following format:
</p>
<pre> $5FF2:  [CCCC CCCC] (exact number of bits unknown)
   C = Select 8k CHR page @ $0000-1FFF
</pre>
<p>With this mapper, there may be no VROM present.
</p><p>There are registers at $A000 and $A001. I haven't been able to verify them yet, but here's how VirtuaNesEX has them:
</p>
<pre> $A000:  [.... ..MM] Mirroring
   0 = Vert
   1 = Horz
   2 = 1ScA
   3 = 1ScB
</pre>
<pre> $A001:  [.... ..EE] Enable Write SRAM
   1,2,3 = Enabled
</pre>
<p>VirtuaNesEX has the write enable fixed to always enabled. This documentation is just provided as a clue in case that works out not to work well.
</p><p>Additionally, VirtuaNesEX handles register writes to $5000 and $5013 but doesn't do anything with them.
</p>
<!-- 
NewPP limit report
CPU time usage: 0.022 seconds
Real time usage: 0.022 seconds
Preprocessor visited node count: 1/1000000
Preprocessor generated node count: 4/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 1/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:775-1!*!*!*!*!*!* and timestamp 20160506210450 and revision id 12308
 -->
<p class="categories">Categories: <a href="Category_INES_Mappers.xhtml">INES Mappers</a></p></div></body></html>