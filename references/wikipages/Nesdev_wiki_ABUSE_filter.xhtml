<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Nesdev wiki:ABUSE filter</title>
<meta content="width=display-width" name="viewport"/>
<link href="w.css" rel="stylesheet" type="text/css"/>
<script src="w.js" type="text/javascript"/>
</head><body><h1>Nesdev wiki:ABUSE filter</h1><div class="article">
<p>The <b>ABUSE filter</b> looks at <b>a</b>ctions <b>b</b>y <b>u</b>sers, <b>s</b>uch as <b>e</b>dits, runs a few heuristics involving regular expressions, and decides which actions are likely to be unconstructive.
It's most useful to limit the damage caused by pattern vandals, or <a class="extiw" href="http://en.wikipedia.org/wiki/Wikipedia:Vandalism" title="wikipedia:Wikipedia:Vandalism">wiki vandals</a> whose edits follow a very distinct <a class="extiw" href="http://en.wikipedia.org/wiki/modus_operandi" title="wikipedia:modus operandi">m.o.</a>
Fortunately, automated vandalism processes are obvious pattern vandals, and a filter administrator can usually discover and curtail the pattern after three edits.
</p>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<ul><li><s>Edit the rules</s> (administrators only)</li>
<li><a href="Nesdev_wiki_talk_ABUSE_filter.xhtml" title="Nesdev wiki talk:ABUSE filter">Propose new rules or report a false positive</a></li></ul>
<h2><span class="mw-headline" id="External_links">External links</span></h2>
<ul><li><a class="extiw" href="http://www.mediawiki.org/wiki/Extension:AbuseFilter" title="mediawikiwiki:Extension:AbuseFilter">Extension documentation</a>, describing rules syntax</li>
<li><a class="external text" href="http://php.net/manual/en/book.pcre.php" rel="nofollow">PHP: Perl-Compatible Regular Expressions</a>, describing the syntax for the right side of operator <code>rlike</code></li></ul>

<!-- 
NewPP limit report
CPU time usage: 0.061 seconds
Real time usage: 0.130 seconds
Preprocessor visited node count: 7/1000000
Preprocessor generated node count: 12/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:929-1!*!0!!*!*!* and timestamp 20160208224628 and revision id 5007
 -->
</div></body></html>